import 'package:flutter_test/flutter_test.dart';import 'package:moor/ffi.dart';import 'package:zen_player/models/database.dart';import 'package:zen_player/models/playlist.dart';void main() {  late AppPlayList mockPlayList;  late MyDatabase database;  late PlayListModel mockModel;  setUp(() {    mockPlayList = AppPlayList(id: "1234", name: "Test playlist");    database = MyDatabase.forTest(VmDatabase.memory());    mockModel = PlayListModel(database: database);  });  tearDown(() async {    await database.close();  });  group("PlayListModel", () {    test("insert and findById", () async {      await mockModel.insert(mockPlayList);      AppPlayList foundPlayList = await mockModel.findById(mockPlayList.id);      expect(mockPlayList.id == foundPlayList.id, true);    });    test("find or create - normal", () async {      AppPlayList playList = await mockModel.findOrCreate({        "name": mockPlayList.name,        "isBuiltIn": mockPlayList.isBuiltIn,      });      AppPlayList foundPlayList = await mockModel.findByName(mockPlayList.name);      expect(playList.id == foundPlayList.id, true);    });    test("findOrCreate - without required data", () async {      expect(mockModel.findOrCreate({}), throwsException);    });    test("findByName", () async {      await mockModel.insert(mockPlayList);      AppPlayList foundPlayList = await mockModel.findByName(mockPlayList.name);      expect(mockPlayList.id == foundPlayList.id, true);    });    test("findOrCreateByName", () async {});  });}