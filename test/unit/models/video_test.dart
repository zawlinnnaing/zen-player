import 'dart:math';import 'package:flutter_test/flutter_test.dart';import 'package:moor/ffi.dart';import 'package:zen_player/models/database.dart';import 'package:zen_player/models/video.dart';import 'package:zen_player/modules/vendors/video.dart';void main() {  late MyDatabase myDatabase;  late VideoModel videoModel;  late AppVideo mockData;  setUp(() {    myDatabase = MyDatabase.forTest(VmDatabase.memory());    videoModel = VideoModel(database: myDatabase);    mockData = AppVideo(        title: "Hello world",        id: "1245",        url: "https://exampleurl.com",        provider: AppVideoProvider.YouTube);  });  tearDown(() async {    await myDatabase.close();  });  group("VideoModel", () {    test("insert and findById", () async {      print("Data to String ${mockData.toMap().toString()}");      await videoModel.insert(mockData.toMap());      AppVideo foundVideo = await videoModel.findById(mockData.id);      expect(foundVideo == mockData, true);    });  });  group("AppVideo ==", () {    test("true case", () {      AppVideo otherVideo = AppVideo(          title: "Hello world",          id: "1245",          url: "https://exampleurl.com",          provider: AppVideoProvider.YouTube);      expect(otherVideo == mockData, true);    });    test("false case - same class", () {      AppVideo otherVideo = AppVideo(          title: "hello",          id: "12455",          url: "https://zenplayer.com",          provider: AppVideoProvider.YouTube);      expect(otherVideo == mockData, false);    });    test("false case - different class", () {      expect(mockData == "String", false);    });  });  group("AppVideoProvider getVideoProviderFromString", () {    test("found case", () {      AppVideoProvider foundProvider =          getVideoProviderFromString("AppVideoProvider.YouTube");      expect(foundProvider == AppVideoProvider.YouTube, true);    });    test("Not found case - throw exception", () {      expect(() => getVideoProviderFromString("hello"), throwsStateError);    });  });}