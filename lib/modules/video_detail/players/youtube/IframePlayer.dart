import 'dart:developer';import 'dart:io';import 'package:flutter/cupertino.dart';import 'package:flutter/services.dart';import 'package:youtube_player_iframe/youtube_player_iframe.dart';import 'package:zen_player/modules/vendors/video.dart';import 'package:zen_player/utils/config.dart';class YouTubeIframePlayer extends StatefulWidget {  final AppVideo video;  YouTubeIframePlayer({required this.video});  @override  State<StatefulWidget> createState() {    return _YouTubeIframePlayerState();  }}class _YouTubeIframePlayerState extends State<YouTubeIframePlayer> {  late YoutubePlayerController _controller;  bool _isVideoFullScreen = false;  @override  void initState() {    _controller = YoutubePlayerController(        initialVideoId: widget.video.id,        params: YoutubePlayerParams(            desktopMode:                Platform.isWindows || Platform.isMacOS || Platform.isLinux,            playsInline: true,            showFullscreenButton: true,            showControls: true));    _controller.hidePauseOverlay();    _controller.onEnterFullscreen = () {      setState(() {        _isVideoFullScreen = true;      });    };    _controller.onExitFullscreen = () {      setState(() {        _isVideoFullScreen = false;      });    };    super.initState();  }  @override  Widget build(BuildContext context) {    // return OrientationBuilder(    //   builder: (context, Orientation orientation) {    //     log("On orientation changed ${orientation.toString()}");    //     return SizedBox(    //       width: MediaQuery.of(context).size.width,    //       child: YoutubePlayerIFrame(    //         controller: _controller,    //         aspectRatio: 16 / 9,    //       ),    //     );    //   },    // );    return SizedBox(      width: MediaQuery.of(context).size.width,      child: YoutubePlayerIFrame(        controller: _controller,        aspectRatio: 16 / 9,      ),    );  }}