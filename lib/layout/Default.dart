import 'dart:developer';import 'package:flutter/material.dart';import 'package:flutter_redux/flutter_redux.dart';import 'package:redux/redux.dart';import 'package:zen_player/modules/home/Home.dart';import 'package:zen_player/modules/setting/Setting.dart';import 'package:zen_player/redux/actions/app.dart';import 'package:zen_player/redux/states/app.dart';import 'package:zen_player/utils/routes.dart';class _BottomNavVm {  final int viewIdx;  final Function(int idx) onIdxChange;  _BottomNavVm({required this.viewIdx, required this.onIdxChange});  factory _BottomNavVm.fromStore(Store<AppState> store) {    return _BottomNavVm(        viewIdx: store.state.currentViewIndex,        onIdxChange: (idx) => store.dispatch(UpdateViewIndexAction(idx)));  }}class BottomNavigation extends StatefulWidget {  @override  State<StatefulWidget> createState() {    return _BottomNaviagtionState();  }}class _BottomNaviagtionState extends State<BottomNavigation> {  int _selectedIndex = 0;  List<Widget> _wigets = [Home(), Setting()];  void _onItemTap(int idx, Function(int idx) idxChangeFn, BuildContext contex) {    idxChangeFn(idx);    Routes.changeRouteWithoutAnimation(_wigets[idx], context);  }  @override  Widget build(BuildContext context) {    log("current index ${_selectedIndex.toString()}");    return StoreConnector(        builder: (BuildContext context, _BottomNavVm vm) => BottomNavigationBar(              items: const <BottomNavigationBarItem>[                BottomNavigationBarItem(icon: Icon(Icons.home), label: "Home"),                BottomNavigationBarItem(                    icon: Icon(Icons.settings), label: "Settings")              ],              currentIndex: vm.viewIdx,              onTap: (idx) => _onItemTap(idx, vm.onIdxChange, context),            ),        converter: (Store<AppState> store) => _BottomNavVm.fromStore(store));  }}class SearchButton extends StatelessWidget {  @override  Widget build(BuildContext context) {    return IconButton(        padding: EdgeInsets.symmetric(vertical: 20),        icon: const Icon(Icons.search),        onPressed: () => Navigator.pushNamed(context, Routes.search));  }}class DefaultLayout extends StatelessWidget {  final String appTitle = "Zen Player";  final Widget child;  final AppBar? appBar;  final bool showBackBtn;  DefaultLayout(      {Key? key, required this.child, this.appBar, this.showBackBtn = false});  @override  Widget build(BuildContext context) {    return Scaffold(      appBar: this.appBar ??          AppBar(            title: Text(appTitle),            automaticallyImplyLeading: this.showBackBtn,            actions: [              SearchButton(),            ],          ),      body: this.child,      bottomNavigationBar: BottomNavigation(),    );  }}